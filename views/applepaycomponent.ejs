<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://checkoutshopper-live.adyen.com/checkoutshopper/sdk/5.33.0/adyen.js"
        integrity="sha384-mPMlkgVUT7jVJZT0sTSfe+M4uN1ArRf1Itg76PcI6Y+zPLDvjCnjmAyyjtak3269"
        crossorigin="anonymous"></script>
    
    <link rel="stylesheet" href="https://checkoutshopper-live.adyen.com/checkoutshopper/sdk/5.33.0/adyen.css"
        integrity="sha384-86hqIixzFjIoRoaNYg9pd4mtpn3HtgJmrpYiyTv+3DaGPF70VnRUbtK7MKLTLRd9" crossorigin="anonymous">
</head>
<body>
    <div id="applepay-container"></div>
    <div id="log-section"></div>
</body>
<script>

        function showTheLogs(text){
            var div = document.createElement("div");
            div.innerHTML = text;
            document.getElementById('log-section').appendChild(div);
        };

        const configuration = {

            showPayButton: true,
            locale: "en-US",
            environment: 'live', // Change to 'live' for the live environment.
            clientKey: 'live_M3V7DUCE7BFA7EGN7YWS3A66XIPAJZFL', // Public key used for client-side authentication: https://docs.adyen.com/development-resources/client-side-authentication
                // analytics: {
                //   enabled: true // Set to false to not send analytics data to Adyen.
                // },

           
            // for session
            session: {
                id: '<%= result.id %>', // Unique identifier for the payment session.
                sessionData: '<%= result.sessionData %>'
            },

            onPaymentCompleted: (result, component) => {
                showTheLogs('below is for onPaymentCompleted:');
                showTheLogs(result, component);
                console.log('below is for onPaymentCompleted:');
                console.info(result, component);
            },
            onError: (error, component) => {
                showTheLogs('there is error');
                showTheLogs(error.name, error.message, error.stack, component);
                console.log('there is error');
                console.error(error.name, error.message, error.stack, component);
            },
        };

    async function createCheckout() {
        const checkout = await AdyenCheckout(configuration);
        const applePayComponent = checkout.create('applepay');
        applePayComponent
            .isAvailable()
            .then(() => {
                applePayComponent.mount("#applepay-container");
            })
            .catch(e => {
                showTheLogs("Apple Pay is not available");
                showTheLogs(e);
                console.log("Apple Pay is not available");
                console.log(e);
                //Apple Pay is not available
            });
    };
    createCheckout();
</script>
</html>